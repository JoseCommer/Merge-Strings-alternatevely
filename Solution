class Solution {
public:
    string mergeAlternately(string word1, string word2) {
    string result = "";
    int i = 0, j = 0;
    int len1 = word1.length(), len2 = word2.length();

    // Merge characters in alternating order
    while (i < len1 && j < len2) {
        result += word1[i++];
        result += word2[j++];
    }

    // Append remaining characters from word1 (if any)
    while (i < len1) {
        result += word1[i++];
    }

    // Append remaining characters from word2 (if any)
    while (j < len2) {
        result += word2[j++];
    }

    return result;
}

int main() {
    // Example test cases
    cout << mergeAlternately("abc", "pqr") << endl;   // Output: apbqcr
    cout << mergeAlternately("ab", "pqrs") << endl;   // Output: apbqrs
    cout << mergeAlternately("abcd", "pq") << endl;   // Output: apbqcd

    return 0;
}
        

};
